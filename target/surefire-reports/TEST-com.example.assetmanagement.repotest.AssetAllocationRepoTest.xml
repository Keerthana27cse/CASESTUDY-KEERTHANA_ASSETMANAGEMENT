<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" version="3.0.2" name="com.example.assetmanagement.repotest.AssetAllocationRepoTest" time="1.71" tests="8" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="24"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="D:\CASESTUDY\assetmanagement\target\test-classes;D:\CASESTUDY\assetmanagement\target\classes;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.5.0\spring-boot-starter-data-jpa-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-starter\3.5.0\spring-boot-starter-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.5.0\spring-boot-starter-logging-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\KEERTHANA\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\KEERTHANA\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\KEERTHANA\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\KEERTHANA\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\KEERTHANA\.m2\repository\org\yaml\snakeyaml\2.4\snakeyaml-2.4.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.5.0\spring-boot-starter-jdbc-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-jdbc\6.2.7\spring-jdbc-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\hibernate\orm\hibernate-core\6.6.15.Final\hibernate-core-6.6.15.Final.jar;C:\Users\KEERTHANA\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\KEERTHANA\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\KEERTHANA\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\KEERTHANA\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\KEERTHANA\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\KEERTHANA\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\KEERTHANA\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\KEERTHANA\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\KEERTHANA\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\KEERTHANA\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\KEERTHANA\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\KEERTHANA\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\data\spring-data-jpa\3.5.0\spring-data-jpa-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\data\spring-data-commons\3.5.0\spring-data-commons-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-orm\6.2.7\spring-orm-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-context\6.2.7\spring-context-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-tx\6.2.7\spring-tx-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-beans\6.2.7\spring-beans-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-aspects\6.2.7\spring-aspects-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.5.0\spring-boot-starter-web-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.5.0\spring-boot-starter-json-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.19.0\jackson-datatype-jdk8-2.19.0.jar;C:\Users\KEERTHANA\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.19.0\jackson-datatype-jsr310-2.19.0.jar;C:\Users\KEERTHANA\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.19.0\jackson-module-parameter-names-2.19.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-web\6.2.7\spring-web-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\io\micrometer\micrometer-observation\1.15.0\micrometer-observation-1.15.0.jar;C:\Users\KEERTHANA\.m2\repository\io\micrometer\micrometer-commons\1.15.0\micrometer-commons-1.15.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-webmvc\6.2.7\spring-webmvc-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-expression\6.2.7\spring-expression-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-devtools\3.5.0\spring-boot-devtools-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot\3.5.0\spring-boot-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.5.0\spring-boot-autoconfigure-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\com\h2database\h2\2.3.232\h2-2.3.232.jar;C:\Users\KEERTHANA\.m2\repository\com\mysql\mysql-connector-j\9.2.0\mysql-connector-j-9.2.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.5.0\spring-boot-starter-tomcat-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\KEERTHANA\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.41\tomcat-embed-core-10.1.41.jar;C:\Users\KEERTHANA\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.41\tomcat-embed-el-10.1.41.jar;C:\Users\KEERTHANA\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.41\tomcat-embed-websocket-10.1.41.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.5.0\spring-boot-starter-test-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-test\3.5.0\spring-boot-test-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.5.0\spring-boot-test-autoconfigure-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\KEERTHANA\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\KEERTHANA\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\KEERTHANA\.m2\repository\net\minidev\json-smart\2.5.2\json-smart-2.5.2.jar;C:\Users\KEERTHANA\.m2\repository\net\minidev\accessors-smart\2.5.2\accessors-smart-2.5.2.jar;C:\Users\KEERTHANA\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\KEERTHANA\.m2\repository\org\assertj\assertj-core\3.27.3\assertj-core-3.27.3.jar;C:\Users\KEERTHANA\.m2\repository\org\awaitility\awaitility\4.3.0\awaitility-4.3.0.jar;C:\Users\KEERTHANA\.m2\repository\org\hamcrest\hamcrest\3.0\hamcrest-3.0.jar;C:\Users\KEERTHANA\.m2\repository\org\mockito\mockito-junit-jupiter\5.17.0\mockito-junit-jupiter-5.17.0.jar;C:\Users\KEERTHANA\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\KEERTHANA\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-core\6.2.7\spring-core-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-jcl\6.2.7\spring-jcl-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-test\6.2.7\spring-test-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\xmlunit\xmlunit-core\2.10.1\xmlunit-core-2.10.1.jar;C:\Users\KEERTHANA\.m2\repository\com\sun\mail\jakarta.mail\2.0.1\jakarta.mail-2.0.1.jar;C:\Users\KEERTHANA\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\KEERTHANA\.m2\repository\org\apache\tomcat\embed\tomcat-embed-jasper\10.1.41\tomcat-embed-jasper-10.1.41.jar;C:\Users\KEERTHANA\.m2\repository\org\eclipse\jdt\ecj\3.33.0\ecj-3.33.0.jar;C:\Users\KEERTHANA\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.2\jakarta.servlet.jsp.jstl-api-3.0.2.jar;C:\Users\KEERTHANA\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\KEERTHANA\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\KEERTHANA\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\KEERTHANA\.m2\repository\org\junit\jupiter\junit-jupiter\5.12.2\junit-jupiter-5.12.2.jar;C:\Users\KEERTHANA\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.12.2\junit-jupiter-api-5.12.2.jar;C:\Users\KEERTHANA\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\KEERTHANA\.m2\repository\org\junit\platform\junit-platform-commons\1.12.2\junit-platform-commons-1.12.2.jar;C:\Users\KEERTHANA\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\KEERTHANA\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.12.2\junit-jupiter-params-5.12.2.jar;C:\Users\KEERTHANA\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.12.2\junit-jupiter-engine-5.12.2.jar;C:\Users\KEERTHANA\.m2\repository\org\junit\platform\junit-platform-engine\1.12.2\junit-platform-engine-1.12.2.jar;C:\Users\KEERTHANA\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.5.0\spring-boot-starter-validation-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\KEERTHANA\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.5.0\spring-boot-starter-security-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-aop\6.2.7\spring-aop-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\security\spring-security-config\6.5.0\spring-security-config-6.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\security\spring-security-web\6.5.0\spring-security-web-6.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\security\spring-security-test\6.5.0\spring-security-test-6.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\security\spring-security-core\6.5.0\spring-security-core-6.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\security\spring-security-crypto\6.5.0\spring-security-crypto-6.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\KEERTHANA\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.5\jjwt-api-0.11.5.jar;C:\Users\KEERTHANA\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.5\jjwt-impl-0.11.5.jar;C:\Users\KEERTHANA\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.5\jjwt-jackson-0.11.5.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-starter-mail\3.5.0\spring-boot-starter-mail-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-context-support\6.2.7\spring-context-support-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\eclipse\angus\jakarta.mail\2.0.3\jakarta.mail-2.0.3.jar;C:\Users\KEERTHANA\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\KEERTHANA\.m2\repository\org\mockito\mockito-core\5.17.0\mockito-core-5.17.0.jar;C:\Users\KEERTHANA\.m2\repository\net\bytebuddy\byte-buddy\1.17.5\byte-buddy-1.17.5.jar;C:\Users\KEERTHANA\.m2\repository\net\bytebuddy\byte-buddy-agent\1.17.5\byte-buddy-agent-1.17.5.jar;C:\Users\KEERTHANA\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\KEERTHANA\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.19.0\jackson-databind-2.19.0.jar;C:\Users\KEERTHANA\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.19.0\jackson-annotations-2.19.0.jar;C:\Users\KEERTHANA\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.19.0\jackson-core-2.19.0.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Asia/Calcutta"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="24"/>
    <property name="APPLICATION_NAME" value="assetmanagement"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-24\bin"/>
    <property name="sun.java.command" value="C:\Users\KEERTHANA\AppData\Local\Temp\surefire16807350963370271906\surefirebooter-20250715174026447_3.jar C:\Users\KEERTHANA\AppData\Local\Temp\surefire16807350963370271906 2025-07-15T17-40-26_224-jvmRun1 surefire-20250715174026447_1tmp surefire_0-20250715174026447_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="D:\CASESTUDY\assetmanagement\target\test-classes;D:\CASESTUDY\assetmanagement\target\classes;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.5.0\spring-boot-starter-data-jpa-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-starter\3.5.0\spring-boot-starter-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.5.0\spring-boot-starter-logging-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\KEERTHANA\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\KEERTHANA\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\KEERTHANA\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\KEERTHANA\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\KEERTHANA\.m2\repository\org\yaml\snakeyaml\2.4\snakeyaml-2.4.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.5.0\spring-boot-starter-jdbc-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\com\zaxxer\HikariCP\6.3.0\HikariCP-6.3.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-jdbc\6.2.7\spring-jdbc-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\hibernate\orm\hibernate-core\6.6.15.Final\hibernate-core-6.6.15.Final.jar;C:\Users\KEERTHANA\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\KEERTHANA\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\KEERTHANA\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\KEERTHANA\.m2\repository\org\hibernate\common\hibernate-commons-annotations\7.0.3.Final\hibernate-commons-annotations-7.0.3.Final.jar;C:\Users\KEERTHANA\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\KEERTHANA\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\KEERTHANA\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\KEERTHANA\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\KEERTHANA\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\KEERTHANA\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\KEERTHANA\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\KEERTHANA\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\data\spring-data-jpa\3.5.0\spring-data-jpa-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\data\spring-data-commons\3.5.0\spring-data-commons-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-orm\6.2.7\spring-orm-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-context\6.2.7\spring-context-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-tx\6.2.7\spring-tx-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-beans\6.2.7\spring-beans-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-aspects\6.2.7\spring-aspects-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.5.0\spring-boot-starter-web-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.5.0\spring-boot-starter-json-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.19.0\jackson-datatype-jdk8-2.19.0.jar;C:\Users\KEERTHANA\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.19.0\jackson-datatype-jsr310-2.19.0.jar;C:\Users\KEERTHANA\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.19.0\jackson-module-parameter-names-2.19.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-web\6.2.7\spring-web-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\io\micrometer\micrometer-observation\1.15.0\micrometer-observation-1.15.0.jar;C:\Users\KEERTHANA\.m2\repository\io\micrometer\micrometer-commons\1.15.0\micrometer-commons-1.15.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-webmvc\6.2.7\spring-webmvc-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-expression\6.2.7\spring-expression-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-devtools\3.5.0\spring-boot-devtools-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot\3.5.0\spring-boot-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.5.0\spring-boot-autoconfigure-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\com\h2database\h2\2.3.232\h2-2.3.232.jar;C:\Users\KEERTHANA\.m2\repository\com\mysql\mysql-connector-j\9.2.0\mysql-connector-j-9.2.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.5.0\spring-boot-starter-tomcat-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\KEERTHANA\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.41\tomcat-embed-core-10.1.41.jar;C:\Users\KEERTHANA\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.41\tomcat-embed-el-10.1.41.jar;C:\Users\KEERTHANA\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.41\tomcat-embed-websocket-10.1.41.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.5.0\spring-boot-starter-test-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-test\3.5.0\spring-boot-test-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.5.0\spring-boot-test-autoconfigure-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\KEERTHANA\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\KEERTHANA\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\KEERTHANA\.m2\repository\net\minidev\json-smart\2.5.2\json-smart-2.5.2.jar;C:\Users\KEERTHANA\.m2\repository\net\minidev\accessors-smart\2.5.2\accessors-smart-2.5.2.jar;C:\Users\KEERTHANA\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\KEERTHANA\.m2\repository\org\assertj\assertj-core\3.27.3\assertj-core-3.27.3.jar;C:\Users\KEERTHANA\.m2\repository\org\awaitility\awaitility\4.3.0\awaitility-4.3.0.jar;C:\Users\KEERTHANA\.m2\repository\org\hamcrest\hamcrest\3.0\hamcrest-3.0.jar;C:\Users\KEERTHANA\.m2\repository\org\mockito\mockito-junit-jupiter\5.17.0\mockito-junit-jupiter-5.17.0.jar;C:\Users\KEERTHANA\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\KEERTHANA\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-core\6.2.7\spring-core-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-jcl\6.2.7\spring-jcl-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-test\6.2.7\spring-test-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\xmlunit\xmlunit-core\2.10.1\xmlunit-core-2.10.1.jar;C:\Users\KEERTHANA\.m2\repository\com\sun\mail\jakarta.mail\2.0.1\jakarta.mail-2.0.1.jar;C:\Users\KEERTHANA\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\KEERTHANA\.m2\repository\org\apache\tomcat\embed\tomcat-embed-jasper\10.1.41\tomcat-embed-jasper-10.1.41.jar;C:\Users\KEERTHANA\.m2\repository\org\eclipse\jdt\ecj\3.33.0\ecj-3.33.0.jar;C:\Users\KEERTHANA\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\3.0.2\jakarta.servlet.jsp.jstl-api-3.0.2.jar;C:\Users\KEERTHANA\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\KEERTHANA\.m2\repository\jakarta\el\jakarta.el-api\5.0.0\jakarta.el-api-5.0.0.jar;C:\Users\KEERTHANA\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\3.0.1\jakarta.servlet.jsp.jstl-3.0.1.jar;C:\Users\KEERTHANA\.m2\repository\org\junit\jupiter\junit-jupiter\5.12.2\junit-jupiter-5.12.2.jar;C:\Users\KEERTHANA\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.12.2\junit-jupiter-api-5.12.2.jar;C:\Users\KEERTHANA\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\KEERTHANA\.m2\repository\org\junit\platform\junit-platform-commons\1.12.2\junit-platform-commons-1.12.2.jar;C:\Users\KEERTHANA\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\KEERTHANA\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.12.2\junit-jupiter-params-5.12.2.jar;C:\Users\KEERTHANA\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.12.2\junit-jupiter-engine-5.12.2.jar;C:\Users\KEERTHANA\.m2\repository\org\junit\platform\junit-platform-engine\1.12.2\junit-platform-engine-1.12.2.jar;C:\Users\KEERTHANA\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-starter-validation\3.5.0\spring-boot-starter-validation-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\KEERTHANA\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-starter-security\3.5.0\spring-boot-starter-security-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-aop\6.2.7\spring-aop-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\security\spring-security-config\6.5.0\spring-security-config-6.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\security\spring-security-web\6.5.0\spring-security-web-6.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\security\spring-security-test\6.5.0\spring-security-test-6.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\security\spring-security-core\6.5.0\spring-security-core-6.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\security\spring-security-crypto\6.5.0\spring-security-crypto-6.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\KEERTHANA\.m2\repository\io\jsonwebtoken\jjwt-api\0.11.5\jjwt-api-0.11.5.jar;C:\Users\KEERTHANA\.m2\repository\io\jsonwebtoken\jjwt-impl\0.11.5\jjwt-impl-0.11.5.jar;C:\Users\KEERTHANA\.m2\repository\io\jsonwebtoken\jjwt-jackson\0.11.5\jjwt-jackson-0.11.5.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\boot\spring-boot-starter-mail\3.5.0\spring-boot-starter-mail-3.5.0.jar;C:\Users\KEERTHANA\.m2\repository\org\springframework\spring-context-support\6.2.7\spring-context-support-6.2.7.jar;C:\Users\KEERTHANA\.m2\repository\org\eclipse\angus\jakarta.mail\2.0.3\jakarta.mail-2.0.3.jar;C:\Users\KEERTHANA\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\KEERTHANA\.m2\repository\org\mockito\mockito-core\5.17.0\mockito-core-5.17.0.jar;C:\Users\KEERTHANA\.m2\repository\net\bytebuddy\byte-buddy\1.17.5\byte-buddy-1.17.5.jar;C:\Users\KEERTHANA\.m2\repository\net\bytebuddy\byte-buddy-agent\1.17.5\byte-buddy-agent-1.17.5.jar;C:\Users\KEERTHANA\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\KEERTHANA\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.19.0\jackson-databind-2.19.0.jar;C:\Users\KEERTHANA\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.19.0\jackson-annotations-2.19.0.jar;C:\Users\KEERTHANA\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.19.0\jackson-core-2.19.0.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\KEERTHANA"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-03-18"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-24"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="D:\CASESTUDY\assetmanagement"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="C:\Users\KEERTHANA\AppData\Local\Temp\surefire16807350963370271906\surefirebooter-20250715174026447_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="24+36-3646"/>
    <property name="user.name" value="KEERTHANA"/>
    <property name="stdout.encoding" value="Cp1252"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\KEERTHANA\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\KEERTH~1\AppData\Local\Temp\"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="24"/>
    <property name="user.dir" value="D:\CASESTUDY\assetmanagement"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="15548"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="CONSOLE_LOG_CHARSET" value="windows-1252"/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-24\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python313\Scripts\;C:\Python313\;C:\Python312\Scripts\;C:\Python312\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\hadoop\bin;C:\hadoop\sbin;C:\nc110;C:\Users\KEERTHANA\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\MongoDB Inc;C:\Program Files\MongoDB\Server\8.0\bin;C:\Program Files\Java\jdk-24\bin;C:\Program Files\Tesseract-OCR;C:\Program Files\apache-maven-3.9.9\bin;C:\Program Files\nodejs;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\apache-maven-3.9.10\bin;C:\Users\KEERTHANA\scoop\apps\mingw\current\bin;C:\Users\KEERTHANA\scoop\shims;C:\Users\KEERTHANA\AppData\Local\Microsoft\WindowsApps;C:\Users\KEERTHANA\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\KEERTHANA\AppData\Roaming\npm;;c:\Users\KEERTHANA\AppData\Roaming\Code\User\globalStorage\github.copilot-chat\debugCommand;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="Cp1252"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="24+36-3646"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="68.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[assetmanagement] "/>
  </properties>
  <testcase name="testFindAllByOrderByAllocationDateDesc" classname="com.example.assetmanagement.repotest.AssetAllocationRepoTest" time="0.368">
    <system-out><![CDATA[2025-07-15T17:40:40.239+05:30  INFO 15548 --- [assetmanagement] [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.example.assetmanagement.repotest.AssetAllocationRepoTest]: AssetAllocationRepoTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-07-15T17:40:40.276+05:30  INFO 15548 --- [assetmanagement] [           main] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.example.assetmanagement.AssetmanagementApplication for test class com.example.assetmanagement.repotest.AssetAllocationRepoTest
2025-07-15T17:40:40.281+05:30  INFO 15548 --- [assetmanagement] [           main] o.s.b.d.r.RestartApplicationListener     : Restart disabled due to context in which it is running

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.5.0)

2025-07-15T17:40:40.316+05:30  INFO 15548 --- [assetmanagement] [           main] c.e.a.repotest.AssetAllocationRepoTest   : Starting AssetAllocationRepoTest using Java 24 with PID 15548 (started by KEERTHANA in D:\CASESTUDY\assetmanagement)
2025-07-15T17:40:40.316+05:30  INFO 15548 --- [assetmanagement] [           main] c.e.a.repotest.AssetAllocationRepoTest   : No active profile set, falling back to 1 default profile: "default"
2025-07-15T17:40:40.458+05:30  INFO 15548 --- [assetmanagement] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-07-15T17:40:40.490+05:30  INFO 15548 --- [assetmanagement] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 31 ms. Found 8 JPA repository interfaces.
2025-07-15T17:40:40.511+05:30  INFO 15548 --- [assetmanagement] [           main] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2025-07-15T17:40:40.550+05:30  INFO 15548 --- [assetmanagement] [           main] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:83a8777c-4609-48d4-9372-3ca492656cbf;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2025-07-15T17:40:40.845+05:30  INFO 15548 --- [assetmanagement] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-07-15T17:40:40.849+05:30  INFO 15548 --- [assetmanagement] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-07-15T17:40:40.859+05:30  INFO 15548 --- [assetmanagement] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-07-15T17:40:40.881+05:30  INFO 15548 --- [assetmanagement] [           main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@7c9a5397']
	Database driver: undefined/unknown
	Database version: 2.3.232
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-07-15T17:40:41.054+05:30  INFO 15548 --- [assetmanagement] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: create table asset (id bigint generated by default as identity, asset_model varchar(255), asset_name varchar(255) not null, asset_no varchar(255) not null, asset_status enum ('ALLOCATED','AVAILABLE','DAMAGED','DISCARDED','IN_MAINTENANCE','IN_USE','RETURNED','UNDER_MAINTENANCE','WORKING'), asset_value float(53), created_at timestamp(6) not null, description TEXT, expiry_date date, image_url varchar(500), manufacturing_date date, updated_at timestamp(6), category_id bigint, primary key (id))
Hibernate: create table asset_allocation (id bigint generated by default as identity, allocation_date timestamp(6) not null, allocation_status enum ('ALLOCATED','BORROWED','IN_USE','REQUESTED','RETURNED') not null, request_date timestamp(6) not null, return_date timestamp(6), asset_id bigint not null, employee_id bigint not null, primary key (id))
Hibernate: create table asset_audit (id bigint generated by default as identity, audit_date timestamp(6) not null, remarks varchar(1000), status enum ('APPROVED','COMPLETED','DAMAGED','IN_USE','MARKED_RETURNED','PENDING','REJECTED','RESOLVED','RETURNED','RETURN_REQUEST','SHIPPED') not null, asset_id bigint not null, employee_id bigint not null, primary key (id))
Hibernate: create table asset_category (id bigint generated by default as identity, category_name varchar(255) not null, primary key (id))
Hibernate: create table employee (id bigint generated by default as identity, address varchar(255) not null, contact_number varchar(255) not null, created_at timestamp(6) not null, email varchar(255) not null, empstatus enum ('ACTIVE','INACTIVE'), gender enum ('FEMALE','MALE','OTHER') not null, name varchar(100) not null, password varchar(255), role enum ('ADMIN','EMPLOYEE') not null, username varchar(50) not null, primary key (id))
Hibernate: create table new_asset_request (id bigint generated by default as identity, description varchar(1000), address_line1 varchar(100) not null, phone varchar(15), request_date timestamp(6) not null, request_reason TEXT not null, status enum ('APPROVED','COMPLETED','DAMAGED','IN_USE','MARKED_RETURNED','PENDING','REJECTED','RESOLVED','RETURNED','RETURN_REQUEST','SHIPPED') not null, zip_code varchar(10) not null, asset_id bigint, employee_id bigint not null, category_id bigint not null, primary key (id))
Hibernate: create table return_request (id bigint generated by default as identity, reason varchar(255), request_date timestamp(6), return_date timestamp(6), status enum ('APPROVED','COMPLETED','DAMAGED','IN_USE','MARKED_RETURNED','PENDING','REJECTED','RESOLVED','RETURNED','RETURN_REQUEST','SHIPPED'), asset_id bigint, employee_id bigint, primary key (id))
Hibernate: create table service_request (id bigint generated by default as identity, description varchar(500), issue_type enum ('HARDWARE','MALFUNCTION','OTHER','REPAIR','SOFTWARE') not null, request_date timestamp(6) not null, status enum ('APPROVED','COMPLETED','DAMAGED','IN_USE','MARKED_RETURNED','PENDING','REJECTED','RESOLVED','RETURNED','RETURN_REQUEST','SHIPPED') not null, asset_id bigint not null, employee_id bigint not null, primary key (id))
Hibernate: create table users (id bigint generated by default as identity, email varchar(255) not null, password varchar(255) not null, username varchar(50) not null, userrole enum ('ADMIN','EMPLOYEE') not null, primary key (id))
Hibernate: alter table if exists asset drop constraint if exists UKpqhyoravdj9mg7oywd8wulpct
Hibernate: alter table if exists asset add constraint UKpqhyoravdj9mg7oywd8wulpct unique (asset_no)
Hibernate: alter table if exists asset_category drop constraint if exists UKdk8ca8a0h0rrn1fx4pp73dw1e
Hibernate: alter table if exists asset_category add constraint UKdk8ca8a0h0rrn1fx4pp73dw1e unique (category_name)
Hibernate: alter table if exists employee drop constraint if exists UKfopic1oh5oln2khj8eat6ino0
Hibernate: alter table if exists employee add constraint UKfopic1oh5oln2khj8eat6ino0 unique (email)
Hibernate: alter table if exists employee drop constraint if exists UKim8flsuftl52etbhgnr62d6wh
Hibernate: alter table if exists employee add constraint UKim8flsuftl52etbhgnr62d6wh unique (username)
Hibernate: alter table if exists users drop constraint if exists UK6dotkott2kjsp8vw4d0m25fb7
Hibernate: alter table if exists users add constraint UK6dotkott2kjsp8vw4d0m25fb7 unique (email)
Hibernate: alter table if exists users drop constraint if exists UKr43af9ap4edm43mmtq01oddj6
Hibernate: alter table if exists users add constraint UKr43af9ap4edm43mmtq01oddj6 unique (username)
Hibernate: alter table if exists asset add constraint FKhw44q3ymkd329b8b6mvqxatsh foreign key (category_id) references asset_category
Hibernate: alter table if exists asset_allocation add constraint FKil45gttq1agu6vntbnupl91de foreign key (asset_id) references asset
Hibernate: alter table if exists asset_allocation add constraint FKkam0m4qspv2m1lvb64enucppe foreign key (employee_id) references employee
Hibernate: alter table if exists asset_audit add constraint FKt8yehrfpob1homfjso1f704f7 foreign key (asset_id) references asset
Hibernate: alter table if exists asset_audit add constraint FKdy3w7kk9j8icspxy7bafuhoou foreign key (employee_id) references employee
Hibernate: alter table if exists new_asset_request add constraint FKkfw0b2d7n3hf1k5t33w0nr3hn foreign key (asset_id) references asset
Hibernate: alter table if exists new_asset_request add constraint FKmgjkbinhabpc83nimtuqub19y foreign key (employee_id) references employee
Hibernate: alter table if exists new_asset_request add constraint FKnufqe0dsua3sg83c3tgtyhaef foreign key (category_id) references asset_category
Hibernate: alter table if exists return_request add constraint FKhn03pia8haw5bnchm50v5v8jw foreign key (asset_id) references asset
Hibernate: alter table if exists return_request add constraint FKallcp9sa12jyjstmsvdrl7gd3 foreign key (employee_id) references employee
Hibernate: alter table if exists service_request add constraint FKppgg978nnelu6dibpdtym2ffo foreign key (asset_id) references asset
Hibernate: alter table if exists service_request add constraint FKio9ih9doel1g9x9l2herxgvsb foreign key (employee_id) references employee
2025-07-15T17:40:41.157+05:30  INFO 15548 --- [assetmanagement] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-07-15T17:40:41.316+05:30  INFO 15548 --- [assetmanagement] [           main] c.e.a.repotest.AssetAllocationRepoTest   : Started AssetAllocationRepoTest in 1.036 seconds (process running for 14.677)
Hibernate: insert into asset_category (category_name,id) values (?,default)
Hibernate: insert into employee (address,contact_number,created_at,email,empstatus,gender,name,password,role,username,id) values (?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into asset (asset_model,asset_name,asset_no,asset_status,asset_value,category_id,created_at,description,expiry_date,image_url,manufacturing_date,updated_at,id) values (?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into asset_allocation (allocation_date,allocation_status,asset_id,employee_id,request_date,return_date,id) values (?,?,?,?,?,?,default)
Hibernate: select aa1_0.id,aa1_0.allocation_date,aa1_0.allocation_status,aa1_0.asset_id,aa1_0.employee_id,aa1_0.request_date,aa1_0.return_date from asset_allocation aa1_0 order by aa1_0.allocation_date desc
]]></system-out>
  </testcase>
  <testcase name="testFindByEmployeeId" classname="com.example.assetmanagement.repotest.AssetAllocationRepoTest" time="0.035">
    <system-out><![CDATA[Hibernate: insert into asset_category (category_name,id) values (?,default)
Hibernate: insert into employee (address,contact_number,created_at,email,empstatus,gender,name,password,role,username,id) values (?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into asset (asset_model,asset_name,asset_no,asset_status,asset_value,category_id,created_at,description,expiry_date,image_url,manufacturing_date,updated_at,id) values (?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into asset_allocation (allocation_date,allocation_status,asset_id,employee_id,request_date,return_date,id) values (?,?,?,?,?,?,default)
Hibernate: select aa1_0.id,aa1_0.allocation_date,aa1_0.allocation_status,aa1_0.asset_id,aa1_0.employee_id,aa1_0.request_date,aa1_0.return_date from asset_allocation aa1_0 join employee e1_0 on e1_0.id=aa1_0.employee_id where e1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="testFindByAllocationStatus" classname="com.example.assetmanagement.repotest.AssetAllocationRepoTest" time="0.023">
    <system-out><![CDATA[Hibernate: insert into asset_category (category_name,id) values (?,default)
Hibernate: insert into employee (address,contact_number,created_at,email,empstatus,gender,name,password,role,username,id) values (?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into asset (asset_model,asset_name,asset_no,asset_status,asset_value,category_id,created_at,description,expiry_date,image_url,manufacturing_date,updated_at,id) values (?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into asset_allocation (allocation_date,allocation_status,asset_id,employee_id,request_date,return_date,id) values (?,?,?,?,?,?,default)
Hibernate: select aa1_0.id,aa1_0.allocation_date,aa1_0.allocation_status,aa1_0.asset_id,aa1_0.employee_id,aa1_0.request_date,aa1_0.return_date from asset_allocation aa1_0 where aa1_0.allocation_status=?
]]></system-out>
  </testcase>
  <testcase name="testExistsByAssetAndAllocationStatus" classname="com.example.assetmanagement.repotest.AssetAllocationRepoTest" time="0.024">
    <system-out><![CDATA[Hibernate: insert into asset_category (category_name,id) values (?,default)
Hibernate: insert into employee (address,contact_number,created_at,email,empstatus,gender,name,password,role,username,id) values (?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into asset (asset_model,asset_name,asset_no,asset_status,asset_value,category_id,created_at,description,expiry_date,image_url,manufacturing_date,updated_at,id) values (?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into asset_allocation (allocation_date,allocation_status,asset_id,employee_id,request_date,return_date,id) values (?,?,?,?,?,?,default)
Hibernate: select aa1_0.id from asset_allocation aa1_0 where aa1_0.asset_id=? and aa1_0.allocation_status=? fetch first ? rows only
]]></system-out>
  </testcase>
  <testcase name="testFindByAssetAndAllocationStatus" classname="com.example.assetmanagement.repotest.AssetAllocationRepoTest" time="0.019">
    <system-out><![CDATA[Hibernate: insert into asset_category (category_name,id) values (?,default)
Hibernate: insert into employee (address,contact_number,created_at,email,empstatus,gender,name,password,role,username,id) values (?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into asset (asset_model,asset_name,asset_no,asset_status,asset_value,category_id,created_at,description,expiry_date,image_url,manufacturing_date,updated_at,id) values (?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into asset_allocation (allocation_date,allocation_status,asset_id,employee_id,request_date,return_date,id) values (?,?,?,?,?,?,default)
Hibernate: select aa1_0.id,aa1_0.allocation_date,aa1_0.allocation_status,aa1_0.asset_id,aa1_0.employee_id,aa1_0.request_date,aa1_0.return_date from asset_allocation aa1_0 where aa1_0.asset_id=? and aa1_0.allocation_status=?
]]></system-out>
  </testcase>
  <testcase name="testFindByAssetAndEmployeeAndAllocationStatus" classname="com.example.assetmanagement.repotest.AssetAllocationRepoTest" time="0.018">
    <system-out><![CDATA[Hibernate: insert into asset_category (category_name,id) values (?,default)
Hibernate: insert into employee (address,contact_number,created_at,email,empstatus,gender,name,password,role,username,id) values (?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into asset (asset_model,asset_name,asset_no,asset_status,asset_value,category_id,created_at,description,expiry_date,image_url,manufacturing_date,updated_at,id) values (?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into asset_allocation (allocation_date,allocation_status,asset_id,employee_id,request_date,return_date,id) values (?,?,?,?,?,?,default)
Hibernate: select aa1_0.id,aa1_0.allocation_date,aa1_0.allocation_status,aa1_0.asset_id,aa1_0.employee_id,aa1_0.request_date,aa1_0.return_date from asset_allocation aa1_0 where aa1_0.asset_id=? and aa1_0.employee_id=? and aa1_0.allocation_status=?
]]></system-out>
  </testcase>
  <testcase name="testFindByAssetAndEmployee" classname="com.example.assetmanagement.repotest.AssetAllocationRepoTest" time="0.073">
    <system-out><![CDATA[Hibernate: insert into asset_category (category_name,id) values (?,default)
Hibernate: insert into employee (address,contact_number,created_at,email,empstatus,gender,name,password,role,username,id) values (?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into asset (asset_model,asset_name,asset_no,asset_status,asset_value,category_id,created_at,description,expiry_date,image_url,manufacturing_date,updated_at,id) values (?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into asset_allocation (allocation_date,allocation_status,asset_id,employee_id,request_date,return_date,id) values (?,?,?,?,?,?,default)
Hibernate: select aa1_0.id,aa1_0.allocation_date,aa1_0.allocation_status,aa1_0.asset_id,aa1_0.employee_id,aa1_0.request_date,aa1_0.return_date from asset_allocation aa1_0 where aa1_0.asset_id=? and aa1_0.employee_id=?
]]></system-out>
  </testcase>
  <testcase name="testFindByEmployee" classname="com.example.assetmanagement.repotest.AssetAllocationRepoTest" time="0.054">
    <system-out><![CDATA[Hibernate: insert into asset_category (category_name,id) values (?,default)
Hibernate: insert into employee (address,contact_number,created_at,email,empstatus,gender,name,password,role,username,id) values (?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into asset (asset_model,asset_name,asset_no,asset_status,asset_value,category_id,created_at,description,expiry_date,image_url,manufacturing_date,updated_at,id) values (?,?,?,?,?,?,?,?,?,?,?,?,default)
Hibernate: insert into asset_allocation (allocation_date,allocation_status,asset_id,employee_id,request_date,return_date,id) values (?,?,?,?,?,?,default)
Hibernate: select aa1_0.id,aa1_0.allocation_date,aa1_0.allocation_status,aa1_0.asset_id,aa1_0.employee_id,aa1_0.request_date,aa1_0.return_date from asset_allocation aa1_0 where aa1_0.employee_id=?
]]></system-out>
  </testcase>
</testsuite>